version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=roffidaijoubu@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    networks:
      - web
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  microservice-livechat:
    image: roffidaijoubu/microservice-livechat:latest
    environment:
      - REDIS_URL=redis://redis:6379
      - STATS_STORAGE=redis
    depends_on:
      - redis
    labels:
      # WebSocket route - only for /ws path
      - "traefik.http.routers.microservice-livechat-ws.rule=Host(`wschat.oristarium.com`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.microservice-livechat-ws.entrypoints=https"
      - "traefik.http.routers.microservice-livechat-ws.tls.certresolver=myresolver"
      - "traefik.http.routers.microservice-livechat-ws.middlewares=websocket"
      
      # Web route - for everything except /ws
      - "traefik.http.routers.microservice-livechat-web.rule=Host(`wschat.oristarium.com`)"
      - "traefik.http.routers.microservice-livechat-web.entrypoints=https"
      - "traefik.http.routers.microservice-livechat-web.tls.certresolver=myresolver"
      - "traefik.http.routers.microservice-livechat-web.middlewares=security-headers,compress"
      
      # HTTP to HTTPS redirect
      - "traefik.http.routers.microservice-livechat-http.rule=Host(`wschat.oristarium.com`)"
      - "traefik.http.routers.microservice-livechat-http.entrypoints=http"
      - "traefik.http.routers.microservice-livechat-http.middlewares=https-redirect"
      
      # WebSocket middleware
      - "traefik.http.middlewares.websocket.headers.customRequestHeaders.Connection=upgrade"
      - "traefik.http.middlewares.websocket.headers.customRequestHeaders.Upgrade=websocket"
      
      # Security headers
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.Referrer-Policy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.security-headers.headers.permissionsPolicy=geolocation=self"
      
      # Compression middleware
      - "traefik.http.middlewares.compress.compress=true"
      
      # HTTPS redirect middleware
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      
      # Service configuration
      - "traefik.http.services.microservice-livechat.loadbalancer.server.port=3000"
      
      # Health check route
      - "traefik.http.routers.microservice-livechat-health.rule=Host(`wschat.oristarium.com`) && PathPrefix(`/health`)"
      - "traefik.http.routers.microservice-livechat-health.entrypoints=https"
      - "traefik.http.routers.microservice-livechat-health.tls.certresolver=myresolver"
      - "traefik.http.routers.microservice-livechat-health.middlewares=security-headers"
      
      # Static files route (corrected)
      - "traefik.http.routers.livechat-static.rule=Host(`wschat.oristarium.com`) && PathPrefix(`/assets/`)"
      - "traefik.http.routers.livechat-static.entrypoints=https"
      - "traefik.http.routers.livechat-static.tls.certresolver=myresolver"
      - "traefik.http.routers.livechat-static.middlewares=security-headers,compress"
      - "traefik.http.routers.livechat-static.service=microservice-livechat"
    networks:
      - web
    expose:
      - "3000"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis-data:/data
    networks:
      - web
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
    restart: unless-stopped

networks:
  web:
    external: true

volumes:
  redis-data: